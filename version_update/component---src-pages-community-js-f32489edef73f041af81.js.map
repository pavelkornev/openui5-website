{"version":3,"sources":["webpack:///./src/components/Event/index.js","webpack:///./src/pages/community.js","webpack:///./src/components/Event/styles.module.css"],"names":["Event","title","description","url","date","location","cancelled","className","styles","EventTitle","Link","href","target","rel","EventLocation","EventDescription","Markdown","source","defaultProps","query","CommunityPage","data","communityJson","channels","connect","allEventsJson","Section","Text","size","style","marginBottom","map","idx","items","listStyle","justifyContent","length","key","List","item","icon","rest","flexBasis","marginRight","Tile","Icon","src","publicURL","align","color","id","column","edges","event","node","module","exports"],"mappings":"gTAMMA,EAAQ,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,YAAaC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAEtD,OACI,yBAAKC,UAAWC,IAAOR,OACnB,yBAAKO,UAAWC,IAAOC,YAClBN,EAAM,kBAACO,EAAA,EAAD,CAAMC,KAAMR,EAAKS,OAAO,SAASC,IAAI,YAAYZ,GAAgBA,EACvEK,EAAY,eAAiB,MAElC,yBAAKC,UAAWC,IAAOM,eACfV,EADR,MACkBC,GAEhBH,EACI,yBAAKK,UAAWC,IAAOO,kBAAkB,kBAACC,EAAA,EAAD,CAAUC,OAAQf,KAC3D,OAMlBF,EAAMkB,aAAe,CACjBhB,YAAa,KACbC,IAAK,KACLG,WAAW,GAYAN,QCyDFmB,GAFEC,UAlFO,SAAC,GAAD,QAAGC,KAAH,IAAWC,cAAiBrB,EAA5B,EAA4BA,MAAOsB,EAAnC,EAAmCA,SAAUC,EAA7C,EAA6CA,QAAWC,EAAxD,EAAwDA,cAAxD,OAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKxB,MAAOA,IACZ,kBAACyB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAIC,MAAO,CAAEC,aAAc,+BAAiC7B,GAEnEsB,EAASQ,KAAI,WAAiBC,EAAKf,GAAY,IAAhChB,EAA+B,EAA/BA,MAAOgC,EAAwB,EAAxBA,MACZC,EAAY,CACdC,eAAgB,cAOpB,OAJIH,EAAM,IAAMf,EAAOmB,SACnBF,EAAUJ,aAAe,yCAIzB,kBAAC,WAAD,CAAUO,IAAKL,GACX,kBAACL,EAAA,EAAD,CAAMC,KAAK,IAAIC,MAAO,CAAEC,aAAc,+BAAiC7B,GACvE,kBAACqC,EAAA,EAAD,CAAMT,MAAOK,GAELD,EAAMF,KAAI,SAACQ,EAAMP,GAAS,IACdQ,EAAkBD,EAAlBC,KAASC,EADI,YACKF,EADL,UAErB,OACI,kBAACD,EAAA,EAAD,CACID,IAAKL,EACLH,MAAO,CACHa,UAAW,QACXC,YAAa,6BACbb,aAAc,+BAGlB,kBAACc,EAAA,EAAD,eACIJ,KAAM,kBAAM,kBAACK,EAAA,EAAD,CAAMjB,KAAK,UAAUkB,IAAKN,EAAKO,aAC3CC,MAAM,UACFP,cAYhD,kBAACf,EAAA,EAAD,CAASuB,MAAM,aACX,kBAACtB,EAAA,EAAD,CAAMC,KAAK,IAAIsB,GAAG,SAASrB,MAAO,CAAEC,aAAc,+BAAlD,UACA,kBAACQ,EAAA,EAAD,CAAMa,OAAO,KAEL1B,EAAc2B,MAAMrB,KAAI,WAAwBC,GAAS,IAAnBqB,EAAkB,mBAA7BC,MACvB,OACI,kBAAChB,EAAA,EAAD,CACID,IAAKL,GAEL,kBAAC,EACOqB,SAQhC,kBAAC3B,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMC,KAAK,IAAIC,MAAO,CAAEC,aAAc,+BAAiCN,EAAQvB,OAC/E,kBAACqC,EAAA,EAAD,CAAMa,OAAO,IAAIhB,eAAe,gBAC1BX,EAAQS,MAAMF,KAAI,WAAoBC,GAAS,IAA1BQ,EAAyB,EAAzBA,KAASC,EAAgB,wBAC5C,OACI,kBAACH,EAAA,EAAD,CAAUD,IAAKL,GACX,kBAACY,EAAA,EAAD,eACIJ,KAAM,kBAAM,kBAACK,EAAA,EAAD,CAAMjB,KAAK,QAAQkB,IAAKN,EAAKO,cACrCN,YAYlB,e,qBChGlBc,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,cAAgB,sCAAsC,iBAAmB","file":"component---src-pages-community-js-f32489edef73f041af81.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./styles.module.css\";\nimport Link from \"../Link\";\nimport Markdown from \"../Markdown\";\n\nconst Event = ({ title, description, url, date, location, cancelled }) => {\n\n    return (\n        <div className={styles.Event}>\n            <div className={styles.EventTitle}>\n                {url ? <Link href={url} target=\"_blank\" rel=\"noopener\">{title}</Link> : title}\n                {cancelled ? \" [CANCELLED]\" : null}\n            </div>\n            <div className={styles.EventLocation}>\n                {`${date} / ${location}`}\n            </div>\n            { description\n                ? <div className={styles.EventDescription}><Markdown source={description} /></div>\n                : null\n            }\n        </div>\n    );\n};\n\nEvent.defaultProps = {\n    description: null,\n    url: null,\n    cancelled: false,\n};\n\nEvent.propTypes = {\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    url: PropTypes.string,\n    date: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    cancelled: PropTypes.bool\n};\n\nexport default Event;\n","import React, { Fragment } from \"react\";\nimport {graphql} from \"gatsby\";\n\nimport DefaultTemplate from \"../templates/default\";\nimport Section from \"../components/Section\";\nimport SEO from \"../components/seo\";\nimport Text from \"../components/Text\";\nimport { List, ListItem } from \"../components/List\";\nimport Tile from \"../components/Tile\";\nimport Icon from \"../components/Icon\";\nimport Event from \"../components/Event\"\n\n\nconst CommunityPage = ({ data: { communityJson: { title, channels, connect }, allEventsJson } }) => (\n    <DefaultTemplate>\n        <SEO title={title} />\n        <Section>\n            <Text size=\"1\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{title}</Text>\n            {\n                channels.map(({title, items}, idx, source) => {\n                    const listStyle = {\n                        justifyContent: \"flex-start\"\n                    };\n\n                    if (idx + 1 === source.length) {\n                        listStyle.marginBottom = \"calc(-1 * var(--default-margin-half))\";\n                    }\n\n                    return (\n                        <Fragment key={idx}>\n                            <Text size=\"2\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{title}</Text>\n                            <List style={listStyle}>\n                                {\n                                    items.map((item, idx) => {\n                                        const { icon, ...rest } = item;\n                                        return (\n                                            <ListItem\n                                                key={idx}\n                                                style={{\n                                                    flexBasis: \"170px\",\n                                                    marginRight: \"var(--default-margin-half)\",\n                                                    marginBottom: \"var(--default-margin-half)\",\n                                                }}\n                                            >\n                                                <Tile\n                                                    icon={() => <Icon size=\"120x120\" src={icon.publicURL} />}\n                                                    align=\"center\"\n                                                    {...rest}\n                                                />\n                                            </ListItem>\n                                        );\n                                    })\n                                }\n                            </List>\n                        </Fragment>\n                    );\n                })\n            }\n        </Section>\n        <Section color=\"lightblue\">\n            <Text size=\"2\" id=\"events\" style={{ marginBottom: \"var(--default-margin-half)\" }}>Events</Text>\n            <List column=\"1\">\n                {\n                    allEventsJson.edges.map(({ node: { ...event }}, idx) => {\n                        return (\n                            <ListItem\n                                key={idx}\n                            >\n                                <Event\n                                    {...event}\n                                />\n                            </ListItem>\n                        );\n                    })\n                }\n            </List>\n        </Section>\n        <Section>\n            <Text size=\"2\" style={{ marginBottom: \"var(--default-margin-half)\" }}>{connect.title}</Text>\n            <List column=\"3\" justifyContent=\"spaceBetween\">\n                { connect.items.map(({ icon, ...rest }, idx) => {\n                    return (\n                        <ListItem key={idx}>\n                            <Tile\n                                icon={() => <Icon size=\"96x96\" src={icon.publicURL} />}\n                                {...rest}\n                            />\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Section>\n    </DefaultTemplate>\n);\n\nexport default CommunityPage;\n\nexport const query = graphql`\n    query {\n        communityJson {\n            title\n            channels {\n                title\n                items {\n                    title\n                    url\n                    icon {\n                        publicURL\n                    }\n                }\n            }\n            connect {\n                title\n                items {\n                    title\n                    description\n                    url\n                    icon {\n                        publicURL\n                    }\n                }\n            }\n        }\n        allEventsJson {\n            edges {\n              node {\n                title\n                description\n                url\n                date\n                location\n                cancelled\n              }\n            }\n          }\n    }\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Event\":\"styles-module--Event--3TWD0\",\"EventTitle\":\"styles-module--EventTitle--3BiB6\",\"EventLocation\":\"styles-module--EventLocation--1yhR-\",\"EventDescription\":\"styles-module--EventDescription--3WjY4\"};"],"sourceRoot":""}